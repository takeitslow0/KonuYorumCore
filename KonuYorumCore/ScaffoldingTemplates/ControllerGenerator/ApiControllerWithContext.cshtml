@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@{
if (@Model.NullableEnabled)
{
@:#nullable disable

}
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
@{
    foreach (var namespaceName in Model.RequiredNamespaces)
    {
@:using @namespaceName;
    }
}

namespace @Model.ControllerNamespace
{
@{
    string routePrefix = "api/" + Model.ControllerRootName;
    var entitySetName = Model.ModelMetadata.EntitySetName;
    var primaryKeyName = Model.ModelMetadata.PrimaryKeys[0].PropertyName;
    var primaryKeyShortTypeName = Model.ModelMetadata.PrimaryKeys[0].ShortTypeName;
    var primaryKeyType = Model.ModelMetadata.PrimaryKeys[0].TypeName;
    var primaryKeyIsAutoGenerated = Model.ModelMetadata.PrimaryKeys[0].IsAutoGenerated;
}
    [Route("api/[controller]")]
    [ApiController]
    public class @Model.ControllerName : ControllerBase
    {
        private readonly @Model.ContextTypeName _context;

        public @(Model.ControllerName)(@Model.ContextTypeName context)
        {
            _context = context;
        }

        // GET: @routePrefix
        [HttpGet]
        public IActionResult Get()
        {
            return Ok(_context.@(entitySetName).ToList());
        }

        // GET: @routePrefix/5
        [HttpGet("{id}")]
        public IActionResult Get(@primaryKeyShortTypeName id)
        {
            var @Model.ModelVariable = _context.@(entitySetName).Find(id);
			if (@Model.ModelVariable == null)
            {
                return NotFound();
            }
			return Ok(@Model.ModelVariable);
        }

/		/ POST: @routePrefix
        // To protect from overposting attacks, see https://go.microsoft.com/fwlink/?linkid=2123754
        [HttpPost]
        public IActionResult Post(@Model.ModelTypeName @Model.ModelVariable)
        {
            _context.@(entitySetName).Add(@Model.ModelVariable);
			_context.SaveChanges();
			return CreatedAtAction("Get@(Model.ModelTypeName)", new { id = @(Model.ModelVariable).@primaryKeyName }, @Model.ModelVariable);
        }

        // PUT: @routePrefix
        // To protect from overposting attacks, see https://go.microsoft.com/fwlink/?linkid=2123754
        [HttpPut]
        public IActionResult Put(@Model.ModelTypeName @Model.ModelVariable)
        {
            _context.@(entitySetName).Update(@Model.ModelVariable);
			_context.SaveChanges();
            return NoContent();
        }

        // DELETE: @routePrefix/5
        [HttpDelete("{id}")]
        public IActionResult Delete(@primaryKeyShortTypeName id)
        {
            var @Model.ModelVariable = _context.@(entitySetName).Find(id);
            if (@Model.ModelVariable == null)
            {
                return NotFound();
            }
            _context.@(entitySetName).Remove(@Model.ModelVariable);
            _context.SaveChanges();
            return NoContent();
        }
	}
}
