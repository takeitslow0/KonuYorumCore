@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:<h1>@@ViewData["Title"]</h1>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
@:<h4>@Model.ViewDataTypeShortName</h4>
@:<hr />
@:<div class="row">
    @:<div class="col-12">
        @:<form asp-action="@Model.ViewName">
		@:@@Html.AntiForgeryToken()
            @:<div asp-validation-summary="All" class="text-danger"></div>
        foreach (PropertyMetadata property in Model.ModelMetadata.Properties)
        {
            if (property.IsPrimaryKey)
            {
            @:<input type="hidden" asp-for="@property.PropertyName" />
                continue;
            }

            if (property.Scaffold)
            {
                if (property.IsReadOnly)
                {
                    continue;
                }

                if (property.IsForeignKey)
                {
            @:<div class="row mb-3">
                @:<label asp-for="@property.PropertyName" class="col-2 col-form-label"></label>
				@:<div class="col-5">
					@:<select asp-for="@property.PropertyName" class="form-control" asp-items="ViewBag.@property.PropertyName"></select>
					@:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
				@:</div>
            @:</div>
                    continue;
                }

                bool isCheckbox = property.TypeName.Equals("System.Boolean");
                if (isCheckbox)
                {
            @:<div class="row mb-3">
				@:<label asp-for="@property.PropertyName" class="col-2 col-form-label"></label>
				@:<div class="col-5" style="padding-top: 7px;">
					@:<input class="form-check-input" asp-for="@property.PropertyName" />
                @:</div>
            @:</div>
                }
                else if (property.IsEnum && !property.IsEnumFlags)
                {
            @:<div class="row mb-3">
                @:<label asp-for="@property.PropertyName" class="col-2 col-form-label"></label>
				@:<div class="col-5">
					@:<select asp-for="@property.PropertyName" class="form-control"></select>
					@:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
				@:</div>
            @:</div>
                }
                else if (property.IsMultilineText)
                {
            @:<div class="row mb-3">
                @:<label asp-for="@property.PropertyName" class="col-2 col-form-label"></label>
				@:<div class="col-5">
					@:<textarea asp-for="@property.PropertyName" class="form-control"></textarea>
					@:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
				@:</div>
            @:</div>
                }
                else
                {
            @:<div class="row mb-3">
                @:<label asp-for="@property.PropertyName" class="col-2 col-form-label"></label>
				@:<div class="col-5">
					@:<input asp-for="@property.PropertyName" class="form-control" />
					@:<span asp-validation-for="@property.PropertyName" class="text-danger"></span>
				@:</div>
            @:</div>
                }
            }
            // Ideally we shouldn't be here  but if the user marks the foreign key as [ScaffoldColumn(false)], we want to atleast try to make it work.
            else if (property.IsForeignKey)
            {
        @:<input type="hidden" asp-for="@property.PropertyName" />
                continue;
            }
        }
    }
            <div class="row mb-3">
				<div class="offset-2 col-5">
					<input type="submit" value="Save" class="btn btn-primary" />
					&nbsp;&nbsp;
                    <button type="reset" class="btn btn-outline-primary">Reset</button>
					&nbsp;&nbsp;
					<a asp-action="Index">Back to List</a>
				</div>
            </div>
        </form>
    </div>
</div>

@{
    if (Model.ReferenceScriptLibraries)
    {
@:@@section Scripts {
    @:@@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
@:}
    }
    // The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
@:</body>
@:</html>
    }
}
@functions
{
    string GetAssociationName(IPropertyMetadata property)
    {
        //Todo: Implement properly.
        return property.PropertyName;
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }
}
